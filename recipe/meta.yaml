{% set version = "19.1.6" %}
# check https://clang.llvm.org/docs/OpenMPSupport.html
# occasionally to see last fully supported openmp ver.
{% set openmp_ver = "4.5" %}

package:
  name: openmp
  version: {{ version }}

source:
  url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-{{ version.replace(".rc", "-rc") }}.tar.gz
  sha256: f07fdcbb27b2b67aa95e5ddadf45406b33228481c250e65175066d36536a1ee2
  # name folder for easier deletion; we do the equivalent of downloading
  # the subproject sources, so the work folder then has openmp in it;
  # for details see build scripts
  folder: llvm-project
  patches:
    # fix for https://github.com/llvm/llvm-project/issues/54596
    - patches/0001-link-libomp-to-compiler-rt-on-osx-arm.patch

build:
  number: 0

requirements:
  build:
    - {{ stdlib("c") }}
    - {{ compiler("cxx") }}
    - {{ compiler("fortran") }}  # [win]
    - clang                      # [win]
    - cmake
    - ninja
  host:
    - llvmdev {{ version }}
    # see https://github.com/llvm/llvm-project/issues/54596
    - compiler-rt   # [osx and arm64]

outputs:
  - name: llvm-openmp
    script: install_pkg.sh   # [unix]
    script: install_pkg.bat  # [win]
    build:
      ignore_run_exports_from:
        - {{ compiler("cxx") }}
        - {{ compiler("fortran") }}
      run_exports:
        strong:
          - {{ pin_subpackage("llvm-openmp", max_pin=None) }}
          - _openmp_mutex >={{ openmp_ver }}  # [linux]
          - _openmp_mutex * *_llvm            # [linux]
    requirements:
      build:
        - cmake
        # for run-exports
        - {{ stdlib("c") }}
        - {{ compiler("cxx") }}
      run_constrained:
        - openmp {{ version }}|{{ version }}.*
    test:
      requires:
        - clangxx
        - {{ compiler('cxx') }}
      files:
        - omp_hello.c
      commands:
        # headers
        - test -f $PREFIX/include/omp.h                   # [unix]
        - if not exist %LIBRARY_INC%\omp.h exit 1         # [win]

        # absence of fortran bits
        - test ! -f $PREFIX/include/omp_lib.mod             # [linux]
        - test ! -f $PREFIX/include/omp_lib_kinds.mod       # [linux]
        - if exist %LIBRARY_INC%\omp_lib.mod exit 1         # [win]
        - if exist %LIBRARY_INC%\omp_lib_kinds.mod exit 1   # [win]

        # shared library
        - test -f $PREFIX/lib/libomp.so                   # [linux]
        - test -f $PREFIX/lib/libomp.dylib                # [osx]
        - if not exist %LIBRARY_BIN%\libomp.dll exit 1    # [win]
        - if not exist %LIBRARY_LIB%\libomp.lib exit 1    # [win]

        # compilation test
        - export LNK_XTRA="-Wl,--allow-shlib-undefined"   # [linux]
        - $PREFIX/bin/clang -v -fopenmp -I$PREFIX/include -L$PREFIX/lib -Wl,-rpath,$PREFIX/lib $LNK_XTRA omp_hello.c -o omp_hello  # [unix]
        - '%LIBRARY_BIN%\clang -v -fopenmp -I%LIBRARY_INC% -L%LIBRARY_LIB% omp_hello.c -o omp_hello.exe'   # [win]
        - ./omp_hello            # [unix]
        - '%cd%\omp_hello.exe'   # [win]

  - name: llvm-openmp-fortran
    script: install_pkg.sh   # [unix]
    script: install_pkg.bat  # [win]
    build:
      # restricted to windows for now
      skip: true  # [not win]
      run_exports:
        strong:
          - {{ pin_subpackage("llvm-openmp", max_pin=None) }}
          - _openmp_mutex >={{ openmp_ver }}  # [linux]
          - _openmp_mutex * *_llvm            # [linux]
    requirements:
      build:
        - cmake
        # for run-exports
        - {{ stdlib("c") }}
        - {{ compiler("cxx") }}
        - {{ compiler("fortran") }}     # [linux]
      host:
        - {{ pin_subpackage("llvm-openmp", exact=True) }}
      run:
        - {{ pin_subpackage("llvm-openmp", exact=True) }}
      run_constrained:
        # already contains the version
        - {{ compiler("fortran") }}
    test:
      commands:
        - test -f $PREFIX/include/omp_lib.mod                   # [linux]
        - test -f $PREFIX/include/omp_lib_kinds.mod             # [linux]
        - if not exist %LIBRARY_INC%\omp_lib.mod exit 1         # [win]
        - if not exist %LIBRARY_INC%\omp_lib_kinds.mod exit 1   # [win]

about:
  home: http://openmp.llvm.org/
  license: Apache-2.0 WITH LLVM-exception
  license_file: openmp/LICENSE.TXT
  summary: The OpenMP API supports multi-platform shared-memory parallel programming in C/C++ and Fortran.
  dev_url: https://github.com/llvm/llvm-project/

extra:
  recipe-maintainers:
    - inducer
    - jakirkham
    - yesimon
    - isuruf
    - beckermr
    - katietz
    - h-vetinari
